components:
  schemas:
    # ************************ Common Api Responses ******************
    BaseApiResponse:
      type: object
      discriminator:
        propertyName: respType

    UserMgmtBaseApiResponse:
      type: object
      properties:
      allOf:
        - $ref: '#/components/schemas/BaseApiResponse'

    # ************************ User Api Responses ******************
    UserProfileResponse:
      type: object
      properties:
        data:
          type: object
          $ref: "#/components/schemas/UserProfileDTO"
      allOf:
        - $ref: '#/components/schemas/UserMgmtBaseApiResponse'

    AuthResponse:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/AuthResponseDto'
      allOf:
        - $ref: '#/components/schemas/UserMgmtBaseApiResponse'

    ActivationResponse:
      type: object
      properties:
      allOf:
        - $ref: '#/components/schemas/UserMgmtBaseApiResponse'

    ResetPasswordResponse:
      type: object
      properties:
      allOf:
        - $ref: "#/components/schemas/UserMgmtBaseApiResponse"


    # ********************** User Api Requests ********************

    SignUpRequest:
      type: object
      required:
        - email
        - password
      properties:
        firstName:
          type: string
          description: First name of the user.
        lastName:
          type: string
          description: Last name of the user.
        password:
          type: string
          description: User's password.
        email:
          type: string
          format: email
          description: User's email address.
        role:
          type: string
          description: Role assigned to the user.s
        phoneNumber:
          type: string
          description: User's mobile number.
        gender:
          type: string
          description: User's gender


    SignInRequest:
      type: object
      required:
        -email
        -password
      properties:
        email:
          type: string
        password:
          type: string

    ActivationRequest:
      type: object
      required:
        - activationCode
      properties:
        activationCode:
          type: string

    CreateRoleRequest:
      type: object
      required:
        - role
      properties:
        role:
          type: string

    AssignRoleRequest:
      type: object
      properties:
        roles:
          type: array
          items:
            type: string

    # *************** User Service DTO's **************
    AuthResponseDto:
      type: object
      required:
        -jwt
        -message
      properties:
        jwt:
          type: string

#    UserProfileDto:
#      type: object
#      properties:
#        userId:
#          type: string
#        email:
#          type: string
#        firstName:
#          type: string
#        lastName:
#          type: string
#        phoneNumber:
#          type: string
#        dateOfBirth:
#          type: date
#        gender:
#          type: string
#        profilePicture:
#          type: string
#        isEmailVerified:
#          type: boolean
#        isActive:
#          type: boolean

    UserProfileDTO:
      type: object
      properties:
        email:
          type: string
          format: email
          description: User's email address
          example: "john.doe@example.com"
        username:
          type: string
          description: User's chosen username
          example: "johndoe123"
        firstName:
          type: string
          description: User's first name
          example: "John"
        lastName:
          type: string
          description: User's last name
          example: "Doe"
        profilePicture:
          type: string
          description: URL to the user's profile picture
          example: "https://example.com/profiles/johndoe.jpg"
        bio:
          type: string
          description: User's biography or description
          example: "Software developer and coffee enthusiast"
        isActive:
          type: boolean
          description: Indicates if the user account is active
          example: true
        role:
          type: string
          enum: [ADMIN, BUYER, SELLER]
          description: User's role in the system
          example: "USER"
        createdAt:
          type: string
          format: local-date-time
          description: When the user account was created
          example: "2025-03-22T10:00:00Z"
        updatedAt:
          type: string
          format: local-date-time
          description: When the user profile was last updated
          example: "2025-03-22T15:30:00Z"
        followersCount:
          type: integer
          description: Number of followers the user has
          example: 150
        followingCount:
          type: integer
          description: Number of users this user is following
          example: 75
        dateOfBirth:
          type: string
          format: date
          description: User's date of birth
          example: "1990-05-15"
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - UNKNOWN
          description: User's gender
          example: "MALE"
        digitalWorks:
          type: array
          items:
            $ref: "DigitalWorkServiceApiComponents.yaml#/components/schemas/DigitalWorkDto"
      required:
        - userId
        - email
        - username
        - isActive
        - role
        - createdAt
